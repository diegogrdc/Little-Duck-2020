{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1","program":"/Users/diegogarciarodriguezdelcampo/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","lrlex","--edition=2018","/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=b5c6eb74b941e62c","-C","extra-filename=-b5c6eb74b941e62c","--out-dir","/Users/diegogarciarodriguezdelcampo/Desktop/8vo/Compis/LittleDuck2020/GRMTOOLS/littleduck/target/rls/debug/deps","-L","dependency=/Users/diegogarciarodriguezdelcampo/Desktop/8vo/Compis/LittleDuck2020/GRMTOOLS/littleduck/target/rls/debug/deps","--extern","getopts=/Users/diegogarciarodriguezdelcampo/Desktop/8vo/Compis/LittleDuck2020/GRMTOOLS/littleduck/target/rls/debug/deps/libgetopts-f67403faa032ce99.rmeta","--extern","lazy_static=/Users/diegogarciarodriguezdelcampo/Desktop/8vo/Compis/LittleDuck2020/GRMTOOLS/littleduck/target/rls/debug/deps/liblazy_static-e7e723e4d1e9c0b7.rmeta","--extern","lrpar=/Users/diegogarciarodriguezdelcampo/Desktop/8vo/Compis/LittleDuck2020/GRMTOOLS/littleduck/target/rls/debug/deps/liblrpar-9b7f3060a6fc002e.rmeta","--extern","num_traits=/Users/diegogarciarodriguezdelcampo/Desktop/8vo/Compis/LittleDuck2020/GRMTOOLS/littleduck/target/rls/debug/deps/libnum_traits-9cda37f3087427c3.rmeta","--extern","regex=/Users/diegogarciarodriguezdelcampo/Desktop/8vo/Compis/LittleDuck2020/GRMTOOLS/littleduck/target/rls/debug/deps/libregex-15e62f767381abb3.rmeta","--extern","serde=/Users/diegogarciarodriguezdelcampo/Desktop/8vo/Compis/LittleDuck2020/GRMTOOLS/littleduck/target/rls/debug/deps/libserde-acb3497e831f5304.rmeta","--extern","try_from=/Users/diegogarciarodriguezdelcampo/Desktop/8vo/Compis/LittleDuck2020/GRMTOOLS/littleduck/target/rls/debug/deps/libtry_from-208ad0d9796a73c7.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/diegogarciarodriguezdelcampo/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/diegogarciarodriguezdelcampo/Desktop/8vo/Compis/LittleDuck2020/GRMTOOLS/littleduck/target/rls/debug/deps/liblrlex-b5c6eb74b941e62c.rmeta"},"prelude":{"crate_id":{"name":"lrlex","disambiguator":[5185930046220596340,0]},"crate_root":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib","external_crates":[{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","num":1,"id":{"name":"std","disambiguator":[5737620048972976797,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","num":2,"id":{"name":"core","disambiguator":[2242199718071837415,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2188212999151601010,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1020664553731942337,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","num":5,"id":{"name":"alloc","disambiguator":[5221923779696816614,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","num":6,"id":{"name":"libc","disambiguator":[10454403582981253701,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","num":7,"id":{"name":"unwind","disambiguator":[7392107620293427149,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9383090470819858406,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","num":9,"id":{"name":"hashbrown","disambiguator":[13561338507145107503,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2153887466384468734,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11638676648589799525,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","num":12,"id":{"name":"std_detect","disambiguator":[17336646944492823354,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","num":13,"id":{"name":"addr2line","disambiguator":[16179365956064936006,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","num":14,"id":{"name":"gimli","disambiguator":[2085897901681677768,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","num":15,"id":{"name":"object","disambiguator":[4724748409658749452,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","num":16,"id":{"name":"memchr","disambiguator":[13513626471981952824,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14681960900203760207,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","num":18,"id":{"name":"num_traits","disambiguator":[17265809401536029962,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","num":19,"id":{"name":"try_from","disambiguator":[16967653100685054139,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","num":20,"id":{"name":"cfg_if","disambiguator":[2649273384243194421,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":21,"id":{"name":"lazy_static","disambiguator":[2536963709803309582,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":22,"id":{"name":"lrpar","disambiguator":[4370503244379144014,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":23,"id":{"name":"cactus","disambiguator":[13398556233736354940,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":24,"id":{"name":"cfgrammar","disambiguator":[5369796535161418404,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":25,"id":{"name":"serde","disambiguator":[433786716569061108,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":26,"id":{"name":"serde_derive","disambiguator":[8992417702067271295,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":27,"id":{"name":"indexmap","disambiguator":[9020253485844054377,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":28,"id":{"name":"hashbrown","disambiguator":[14010146949648156092,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":29,"id":{"name":"vob","disambiguator":[13280877345726405743,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":30,"id":{"name":"regex","disambiguator":[1464411774108533596,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":31,"id":{"name":"regex_syntax","disambiguator":[11184389385421279681,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":32,"id":{"name":"aho_corasick","disambiguator":[13941886565913546054,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":33,"id":{"name":"memchr","disambiguator":[742083841895605473,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":34,"id":{"name":"lrtable","disambiguator":[12464761396082277824,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":35,"id":{"name":"static_assertions","disambiguator":[14803153740685115857,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":36,"id":{"name":"fnv","disambiguator":[12605290973780551354,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":37,"id":{"name":"sparsevec","disambiguator":[18064490254905632918,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":38,"id":{"name":"packedvec","disambiguator":[18225922761533640157,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":39,"id":{"name":"bincode","disambiguator":[8020231378795485297,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":40,"id":{"name":"filetime","disambiguator":[561132952785290826,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":41,"id":{"name":"cfg_if","disambiguator":[9145457400277477517,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","num":42,"id":{"name":"libc","disambiguator":[1964545232142191166,0]}}],"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":0,"byte_end":3487,"line_start":1,"line_end":99,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":145},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":949,"byte_end":961,"line_start":25,"line_end":25,"column_start":27,"column_end":39},"alias_span":null,"name":"LexerBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":189},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":996,"byte_end":1008,"line_start":27,"line_end":27,"column_start":17,"column_end":29},"alias_span":null,"name":"ct_token_map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":183},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1010,"byte_end":1017,"line_start":27,"line_end":27,"column_start":31,"column_end":38},"alias_span":null,"name":"CTLexer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1019,"byte_end":1033,"line_start":27,"line_end":27,"column_start":40,"column_end":54},"alias_span":null,"name":"CTLexerBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1035,"byte_end":1044,"line_start":27,"line_end":27,"column_start":56,"column_end":65},"alias_span":null,"name":"LexerKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":486},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1046,"byte_end":1056,"line_start":27,"line_end":27,"column_start":67,"column_end":77},"alias_span":null,"name":"Visibility","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":511},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1072,"byte_end":1085,"line_start":28,"line_end":28,"column_start":14,"column_end":27},"alias_span":null,"name":"DefaultLexeme","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":340},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1099,"byte_end":1118,"line_start":29,"line_end":29,"column_start":13,"column_end":32},"alias_span":null,"name":"LRNonStreamingLexer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":311},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1120,"byte_end":1142,"line_start":29,"line_end":29,"column_start":34,"column_end":56},"alias_span":null,"name":"LRNonStreamingLexerDef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1144,"byte_end":1152,"line_start":29,"line_end":29,"column_start":58,"column_end":66},"alias_span":null,"name":"LexerDef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":292},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1154,"byte_end":1158,"line_start":29,"line_end":29,"column_start":68,"column_end":72},"alias_span":null,"name":"Rule","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":0,"byte_end":3487,"line_start":1,"line_end":99,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":192},{"krate":0,"index":228},{"krate":0,"index":376},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":540},{"krate":0,"index":544},{"krate":0,"index":454},{"krate":0,"index":546},{"krate":0,"index":561},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":460},{"krate":0,"index":463}],"decl_id":null,"docs":" `lrlex` is a partial replacement for [`lex`](http://dinosaur.compilertools.net/lex/index.html)\n / [`flex`](https://westes.github.io/flex/manual/). It takes in a `.l` file and statically\n compiles it to Rust code. The resulting [LRNonStreamingLexerDef] can then be given an input\n string, from which it instantiates an [LRNonStreamingLexer]. This provides an iterator which\n can produce the sequence of [lrpar::Lexeme]s for that input, as well as answer basic queries\n about [lrpar::Span]s (e.g. extracting substrings, calculating line and column numbers).\n","sig":null,"attributes":[{"value":"/ `lrlex` is a partial replacement for [`lex`](http://dinosaur.compilertools.net/lex/index.html)","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":0,"byte_end":98,"line_start":1,"line_end":1,"column_start":1,"column_end":99}},{"value":"/ / [`flex`](https://westes.github.io/flex/manual/). It takes in a `.l` file and statically","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":99,"byte_end":192,"line_start":2,"line_end":2,"column_start":1,"column_end":94}},{"value":"/ compiles it to Rust code. The resulting [LRNonStreamingLexerDef] can then be given an input","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":193,"byte_end":288,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ string, from which it instantiates an [LRNonStreamingLexer]. This provides an iterator which","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":289,"byte_end":385,"line_start":4,"line_end":4,"column_start":1,"column_end":97}},{"value":"/ can produce the sequence of [lrpar::Lexeme]s for that input, as well as answer basic queries","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":386,"byte_end":482,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ about [lrpar::Span]s (e.g. extracting substrings, calculating line and column numbers).","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":483,"byte_end":574,"line_start":6,"line_end":6,"column_start":1,"column_end":92}},{"value":"allow(clippy :: new_without_default)","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":576,"byte_end":614,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":615,"byte_end":649,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"allow(clippy :: unnecessary_wraps)","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":650,"byte_end":686,"line_start":10,"line_end":10,"column_start":1,"column_end":37}},{"value":"allow(clippy :: upper_case_acronyms)","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":687,"byte_end":725,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":128},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":4329,"byte_end":4348,"line_start":35,"line_end":35,"column_start":5,"column_end":24},"name":"LRNonStreamingLexer","qualname":"::ctbuilder::LexerKind::LRNonStreamingLexer","value":"LexerKind::LRNonStreamingLexer","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":127},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":4313,"byte_end":4322,"line_start":34,"line_end":34,"column_start":10,"column_end":19},"name":"LexerKind","qualname":"::ctbuilder::LexerKind","value":"pub enum LexerKind { LRNonStreamingLexer, }","parent":null,"children":[{"krate":0,"index":128}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":487},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":4528,"byte_end":4535,"line_start":42,"line_end":42,"column_start":5,"column_end":12},"name":"Private","qualname":"::ctbuilder::Visibility::Private","value":"Visibility::Private","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" Module-level visibility only.\n","sig":null,"attributes":[{"value":"/ Module-level visibility only.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":4490,"byte_end":4523,"line_start":41,"line_end":41,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":489},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":4555,"byte_end":4561,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"name":"Public","qualname":"::ctbuilder::Visibility::Public","value":"Visibility::Public","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" `pub`\n","sig":null,"attributes":[{"value":"/ `pub`","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":4541,"byte_end":4550,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":491},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":4588,"byte_end":4599,"line_start":46,"line_end":46,"column_start":5,"column_end":16},"name":"PublicSuper","qualname":"::ctbuilder::Visibility::PublicSuper","value":"Visibility::PublicSuper","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" `pub(super)`\n","sig":null,"attributes":[{"value":"/ `pub(super)`","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":4567,"byte_end":4583,"line_start":45,"line_end":45,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":493},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":4625,"byte_end":4635,"line_start":48,"line_end":48,"column_start":5,"column_end":15},"name":"PublicSelf","qualname":"::ctbuilder::Visibility::PublicSelf","value":"Visibility::PublicSelf","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" `pub(self)`\n","sig":null,"attributes":[{"value":"/ `pub(self)`","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":4605,"byte_end":4620,"line_start":47,"line_end":47,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":495},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":4662,"byte_end":4673,"line_start":50,"line_end":50,"column_start":5,"column_end":16},"name":"PublicCrate","qualname":"::ctbuilder::Visibility::PublicCrate","value":"Visibility::PublicCrate","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" `pub(crate)`\n","sig":null,"attributes":[{"value":"/ `pub(crate)`","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":4641,"byte_end":4657,"line_start":49,"line_end":49,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":497},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":4703,"byte_end":4711,"line_start":52,"line_end":52,"column_start":5,"column_end":13},"name":"PublicIn","qualname":"::ctbuilder::Visibility::PublicIn","value":"Visibility::PublicIn(String)","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" `pub(in {arg})`\n","sig":null,"attributes":[{"value":"/ `pub(in {arg})`","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":4679,"byte_end":4698,"line_start":51,"line_end":51,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":486},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":4473,"byte_end":4483,"line_start":40,"line_end":40,"column_start":10,"column_end":20},"name":"Visibility","qualname":"::ctbuilder::Visibility","value":"pub enum Visibility {\n    Private,\n    Public,\n    PublicSuper,\n    PublicSelf,\n    PublicCrate,\n    PublicIn(String),\n}","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":497}],"decl_id":null,"docs":" Specify the visibility of the module generated by [CTLexerBuilder].\n","sig":null,"attributes":[{"value":"/ Specify the visibility of the module generated by [CTLexerBuilder].","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":4353,"byte_end":4424,"line_start":38,"line_end":38,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":132},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":5317,"byte_end":5331,"line_start":70,"line_end":70,"column_start":12,"column_end":26},"name":"CTLexerBuilder","qualname":"::ctbuilder::CTLexerBuilder","value":"CTLexerBuilder {  }","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144}],"decl_id":null,"docs":" A `CTLexerBuilder` allows one to specify the criteria for building a statically generated\n lexer.\n","sig":null,"attributes":[{"value":"/ A `CTLexerBuilder` allows one to specify the criteria for building a statically generated","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":5201,"byte_end":5294,"line_start":68,"line_end":68,"column_start":1,"column_end":94}},{"value":"/ lexer.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":5295,"byte_end":5305,"line_start":69,"line_end":69,"column_start":1,"column_end":11}}]},{"kind":"Type","id":{"krate":0,"index":145},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":5910,"byte_end":5922,"line_start":85,"line_end":85,"column_start":10,"column_end":22},"name":"LexerBuilder","qualname":"::ctbuilder::LexerBuilder","value":"CTLexerBuilder","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.11.0\", note =\n             \"Please refer to this as `CTLexerBuilder`\")","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":5818,"byte_end":5900,"line_start":84,"line_end":84,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":6075,"byte_end":6078,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"new","qualname":"<CTLexerBuilder>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [CTLexerBuilder].\n","sig":null,"attributes":[{"value":"/ Create a new [CTLexerBuilder].","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":6029,"byte_end":6063,"line_start":88,"line_end":88,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":7169,"byte_end":7185,"line_start":116,"line_end":116,"column_start":12,"column_end":28},"name":"new_with_lexemet","qualname":"<CTLexerBuilder>::new_with_lexemet","value":"pub fn new_with_lexemet() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [CTLexerBuilder].","sig":null,"attributes":[{"value":"/ Create a new [CTLexerBuilder].","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":6413,"byte_end":6447,"line_start":100,"line_end":100,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":6452,"byte_end":6455,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ `StorageT` must be an unsigned integer type (e.g. `u8`, `u16`) which is big enough to index","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":6460,"byte_end":6555,"line_start":102,"line_end":102,"column_start":5,"column_end":100}},{"value":"/ all the tokens, rules, and productions in the lexer and less than or equal in size","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":6560,"byte_end":6646,"line_start":103,"line_end":103,"column_start":5,"column_end":91}},{"value":"/ to `usize` (e.g. on a 64-bit machine `u128` would be too big). If you are lexing large","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":6651,"byte_end":6741,"line_start":104,"line_end":104,"column_start":5,"column_end":95}},{"value":"/ files, the additional storage requirements of larger integer types can be noticeable, and","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":6746,"byte_end":6839,"line_start":105,"line_end":105,"column_start":5,"column_end":98}},{"value":"/ in such cases it can be worth specifying a smaller type. `StorageT` defaults to `u32` if","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":6844,"byte_end":6936,"line_start":106,"line_end":106,"column_start":5,"column_end":97}},{"value":"/ unspecified.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":6941,"byte_end":6957,"line_start":107,"line_end":107,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":6962,"byte_end":6965,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":6970,"byte_end":6984,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":6989,"byte_end":6992,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":6997,"byte_end":7008,"line_start":111,"line_end":111,"column_start":5,"column_end":16}},{"value":"/ CTLexerBuilder::<DefaultLexeme<u8>, u8>::new_with_lexemet()","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":7013,"byte_end":7076,"line_start":112,"line_end":112,"column_start":5,"column_end":68}},{"value":"/     .lexer_in_src_dir(\"grm.l\", None)?","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":7081,"byte_end":7122,"line_start":113,"line_end":113,"column_start":5,"column_end":46}},{"value":"/     .build()?;","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":7127,"byte_end":7145,"line_start":114,"line_end":114,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":7150,"byte_end":7157,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":8384,"byte_end":8396,"line_start":148,"line_end":148,"column_start":12,"column_end":24},"name":"lrpar_config","qualname":"<CTLexerBuilder>::lrpar_config","value":"pub fn lrpar_config<F>(Self, F) -> Self where F: 'static +\nFn(CTParserBuilder<, LexemeT, StorageT>) ->\nCTParserBuilder<, LexemeT, StorageT>","parent":null,"children":[],"decl_id":null,"docs":" An optional convenience function to make it easier to create an (lrlex) lexer and (lrpar)\n parser in one shot. The closure passed to this function will be called during\n [CTLexerBuilder::build]: it will be passed an lrpar `CTParserBuilder` instance upon which\n it can set whatever lrpar options are desired. [`CTLexerBuilder`] will then create both the\n compiler and lexer and link them together as required.","sig":null,"attributes":[{"value":"/ An optional convenience function to make it easier to create an (lrlex) lexer and (lrpar)","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":7596,"byte_end":7689,"line_start":130,"line_end":130,"column_start":5,"column_end":98}},{"value":"/ parser in one shot. The closure passed to this function will be called during","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":7694,"byte_end":7775,"line_start":131,"line_end":131,"column_start":5,"column_end":86}},{"value":"/ [CTLexerBuilder::build]: it will be passed an lrpar `CTParserBuilder` instance upon which","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":7780,"byte_end":7873,"line_start":132,"line_end":132,"column_start":5,"column_end":98}},{"value":"/ it can set whatever lrpar options are desired. [`CTLexerBuilder`] will then create both the","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":7878,"byte_end":7973,"line_start":133,"line_end":133,"column_start":5,"column_end":100}},{"value":"/ compiler and lexer and link them together as required.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":7978,"byte_end":8036,"line_start":134,"line_end":134,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":8041,"byte_end":8044,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":8049,"byte_end":8063,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":8068,"byte_end":8071,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":8076,"byte_end":8087,"line_start":138,"line_end":138,"column_start":5,"column_end":16}},{"value":"/ CTLexerBuilder:::new()","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":8092,"byte_end":8118,"line_start":139,"line_end":139,"column_start":5,"column_end":31}},{"value":"/     .lrpar_config(|ctp| {","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":8123,"byte_end":8152,"line_start":140,"line_end":140,"column_start":5,"column_end":34}},{"value":"/         ctp.yacckind(YaccKind::Grmtools)","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":8157,"byte_end":8201,"line_start":141,"line_end":141,"column_start":5,"column_end":49}},{"value":"/             .grammar_in_src_dir(\"calc.y\")","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":8206,"byte_end":8251,"line_start":142,"line_end":142,"column_start":5,"column_end":50}},{"value":"/             .unwrap()","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":8256,"byte_end":8281,"line_start":143,"line_end":143,"column_start":5,"column_end":30}},{"value":"/     })","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":8286,"byte_end":8296,"line_start":144,"line_end":144,"column_start":5,"column_end":15}},{"value":"/     .lexer_in_src_dir(\"calc.l\")?","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":8301,"byte_end":8337,"line_start":145,"line_end":145,"column_start":5,"column_end":41}},{"value":"/     .build()?;","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":8342,"byte_end":8360,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":8365,"byte_end":8372,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":9792,"byte_end":9808,"line_start":173,"line_end":173,"column_start":12,"column_end":28},"name":"lexer_in_src_dir","qualname":"<CTLexerBuilder>::lexer_in_src_dir","value":"pub fn lexer_in_src_dir<P>(Self, P) -> Result<Self, Box<dyn Error>> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Set the input lexer path to a file relative to this project's `src` directory. This will\n also set the output path (i.e. you do not need to call [CTLexerBuilder::output_path]).","sig":null,"attributes":[{"value":"/ Set the input lexer path to a file relative to this project's `src` directory. This will","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":8630,"byte_end":8722,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ also set the output path (i.e. you do not need to call [CTLexerBuilder::output_path]).","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":8727,"byte_end":8817,"line_start":157,"line_end":157,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":8822,"byte_end":8825,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ For example if `a/b.l` is passed as `inp` then [CTLexerBuilder::build] will:","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":8830,"byte_end":8910,"line_start":159,"line_end":159,"column_start":5,"column_end":85}},{"value":"/   * use `src/a/b.l` as the input file.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":8915,"byte_end":8957,"line_start":160,"line_end":160,"column_start":5,"column_end":47}},{"value":"/   * write output to a file which can then be imported by calling `lrlex_mod!(\"a/b.l\")`.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":8962,"byte_end":9053,"line_start":161,"line_end":161,"column_start":5,"column_end":96}},{"value":"/   * create a module in that output file named `b_l`.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":9058,"byte_end":9114,"line_start":162,"line_end":162,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":9119,"byte_end":9122,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ You can override the output path and/or module name by calling","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":9127,"byte_end":9193,"line_start":164,"line_end":164,"column_start":5,"column_end":71}},{"value":"/ [CTLexerBuilder::output_path] and/or [CTLexerBuilder::mod_name], respectively, after","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":9198,"byte_end":9286,"line_start":165,"line_end":165,"column_start":5,"column_end":93}},{"value":"/ calling this function.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":9291,"byte_end":9317,"line_start":166,"line_end":166,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":9322,"byte_end":9325,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ This is a convenience function that makes it easier to compile lexer files stored in a","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":9330,"byte_end":9420,"line_start":168,"line_end":168,"column_start":5,"column_end":95}},{"value":"/ project's `src/` directory: please see [CTLexerBuilder::build] for additional constraints","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":9425,"byte_end":9518,"line_start":169,"line_end":169,"column_start":5,"column_end":98}},{"value":"/ and information about the generated files. Note also that each `.l` file can only be","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":9523,"byte_end":9611,"line_start":170,"line_end":170,"column_start":5,"column_end":93}},{"value":"/ processed once using this function: if you want to generate multiple lexers from a single","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":9616,"byte_end":9709,"line_start":171,"line_end":171,"column_start":5,"column_end":98}},{"value":"/ `.l` file, you will need to use [CTLexerBuilder::output_path].","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":9714,"byte_end":9780,"line_start":172,"line_end":172,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":10964,"byte_end":10974,"line_start":209,"line_end":209,"column_start":12,"column_end":22},"name":"lexer_path","qualname":"<CTLexerBuilder>::lexer_path","value":"pub fn lexer_path<P>(Self, P) -> Self where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Set the input lexer path to `inp`. If specified, you must also call\n [CTLexerBuilder::output_path]. In general it is easier to use\n [CTLexerBuilder::lexer_in_src_dir].\n","sig":null,"attributes":[{"value":"/ Set the input lexer path to `inp`. If specified, you must also call","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":10767,"byte_end":10838,"line_start":206,"line_end":206,"column_start":5,"column_end":76}},{"value":"/ [CTLexerBuilder::output_path]. In general it is easier to use","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":10843,"byte_end":10908,"line_start":207,"line_end":207,"column_start":5,"column_end":70}},{"value":"/ [CTLexerBuilder::lexer_in_src_dir].","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":10913,"byte_end":10952,"line_start":208,"line_end":208,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":11455,"byte_end":11466,"line_start":221,"line_end":221,"column_start":12,"column_end":23},"name":"output_path","qualname":"<CTLexerBuilder>::output_path","value":"pub fn output_path<P>(Self, P) -> Self where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Set the output lexer path to `outp`. Note that there are no requirements on `outp`: the\n file can exist anywhere you can create a valid [Path] to. However, if you wish to use\n [lrlex_mod!] you will need to make sure that `outp` is in [std::env::var]`(\"OUT_DIR\")` or\n one of its subdirectories.\n","sig":null,"attributes":[{"value":"/ Set the output lexer path to `outp`. Note that there are no requirements on `outp`: the","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":11125,"byte_end":11216,"line_start":217,"line_end":217,"column_start":5,"column_end":96}},{"value":"/ file can exist anywhere you can create a valid [Path] to. However, if you wish to use","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":11221,"byte_end":11310,"line_start":218,"line_end":218,"column_start":5,"column_end":94}},{"value":"/ [lrlex_mod!] you will need to make sure that `outp` is in [std::env::var]`(\"OUT_DIR\")` or","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":11315,"byte_end":11408,"line_start":219,"line_end":219,"column_start":5,"column_end":98}},{"value":"/ one of its subdirectories.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":11413,"byte_end":11443,"line_start":220,"line_end":220,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":11689,"byte_end":11698,"line_start":230,"line_end":230,"column_start":12,"column_end":21},"name":"lexerkind","qualname":"<CTLexerBuilder>::lexerkind","value":"pub fn lexerkind(Self, LexerKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the type of lexer to be generated to `lexerkind`.\n","sig":null,"attributes":[{"value":"/ Set the type of lexer to be generated to `lexerkind`.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":11620,"byte_end":11677,"line_start":229,"line_end":229,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":12019,"byte_end":12027,"line_start":238,"line_end":238,"column_start":12,"column_end":20},"name":"mod_name","qualname":"<CTLexerBuilder>::mod_name","value":"pub fn mod_name(Self, &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the generated module name to `mod_name`. If no module name is specified,\n [`process_file`](#method.process_file) will attempt to create a sensible default based on\n the input filename.\n","sig":null,"attributes":[{"value":"/ Set the generated module name to `mod_name`. If no module name is specified,","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":11801,"byte_end":11881,"line_start":235,"line_end":235,"column_start":5,"column_end":85}},{"value":"/ [`process_file`](#method.process_file) will attempt to create a sensible default based on","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":11886,"byte_end":11979,"line_start":236,"line_end":236,"column_start":5,"column_end":98}},{"value":"/ the input filename.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":11984,"byte_end":12007,"line_start":237,"line_end":237,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":12234,"byte_end":12244,"line_start":244,"line_end":244,"column_start":12,"column_end":22},"name":"visibility","qualname":"<CTLexerBuilder>::visibility","value":"pub fn visibility(Self, Visibility) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the visibility of the generated module to `vis`. Defaults to `Visibility::Private`.\n","sig":null,"attributes":[{"value":"/ Set the visibility of the generated module to `vis`. Defaults to `Visibility::Private`.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":12131,"byte_end":12222,"line_start":243,"line_end":243,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":12656,"byte_end":12668,"line_start":253,"line_end":253,"column_start":12,"column_end":24},"name":"rule_ids_map","qualname":"<CTLexerBuilder>::rule_ids_map","value":"pub fn rule_ids_map<T: std::borrow::Borrow<HashMap<String, StorageT>> +\n                    Clone>(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set this lexer builder's map of rule IDs to `rule_ids_map`. By default, lexing rules have\n arbitrary, but distinct, IDs. Setting the map of rule IDs (from rule names to `StorageT`)\n allows users to synchronise a lexer and parser and to check that all rules are used by both\n parts).\n","sig":null,"attributes":[{"value":"/ Set this lexer builder's map of rule IDs to `rule_ids_map`. By default, lexing rules have","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":12337,"byte_end":12430,"line_start":249,"line_end":249,"column_start":5,"column_end":98}},{"value":"/ arbitrary, but distinct, IDs. Setting the map of rule IDs (from rule names to `StorageT`)","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":12435,"byte_end":12528,"line_start":250,"line_end":250,"column_start":5,"column_end":98}},{"value":"/ allows users to synchronise a lexer and parser and to check that all rules are used by both","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":12533,"byte_end":12628,"line_start":251,"line_end":251,"column_start":5,"column_end":100}},{"value":"/ parts).","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":12633,"byte_end":12644,"line_start":252,"line_end":252,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":13625,"byte_end":13630,"line_start":280,"line_end":280,"column_start":12,"column_end":17},"name":"build","qualname":"<CTLexerBuilder>::build","value":"pub fn build(Self) -> Result<CTLexer, Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Statically compile the `.l` file specified by [CTLexerBuilder::lexer_path()] into Rust,\n placing the output into the file specified by [CTLexerBuilder::output_path()].","sig":null,"attributes":[{"value":"/ Statically compile the `.l` file specified by [CTLexerBuilder::lexer_path()] into Rust,","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":12880,"byte_end":12971,"line_start":261,"line_end":261,"column_start":5,"column_end":96}},{"value":"/ placing the output into the file specified by [CTLexerBuilder::output_path()].","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":12976,"byte_end":13058,"line_start":262,"line_end":262,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":13063,"byte_end":13066,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ The generated module follows the form:","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":13071,"byte_end":13113,"line_start":264,"line_end":264,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":13118,"byte_end":13121,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":13126,"byte_end":13137,"line_start":266,"line_end":266,"column_start":5,"column_end":16}},{"value":"/    mod modname {","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":13142,"byte_end":13162,"line_start":267,"line_end":267,"column_start":5,"column_end":25}},{"value":"/      pub fn lexerdef() -> LexerDef<StorageT> { ... }","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":13167,"byte_end":13223,"line_start":268,"line_end":268,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":13228,"byte_end":13231,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/      ...","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":13236,"byte_end":13248,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/    }","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":13253,"byte_end":13261,"line_start":271,"line_end":271,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":13266,"byte_end":13273,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":13278,"byte_end":13281,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ where:","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":13286,"byte_end":13296,"line_start":274,"line_end":274,"column_start":5,"column_end":15}},{"value":"/  * `modname` is either:","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":13301,"byte_end":13328,"line_start":275,"line_end":275,"column_start":5,"column_end":32}},{"value":"/    * the module name specified by [CTLexerBuilder::mod_name()]","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":13333,"byte_end":13399,"line_start":276,"line_end":276,"column_start":5,"column_end":71}},{"value":"/    * or, if no module name was explicitly specified, then for the file `/a/b/c.l` the","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":13404,"byte_end":13493,"line_start":277,"line_end":277,"column_start":5,"column_end":94}},{"value":"/      module name is `c_l` (i.e. the file's leaf name, minus its extension, with a prefix of","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":13498,"byte_end":13593,"line_start":278,"line_end":278,"column_start":5,"column_end":100}},{"value":"/      `_l`).","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":13598,"byte_end":13613,"line_start":279,"line_end":279,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":20640,"byte_end":20659,"line_start":470,"line_end":470,"column_start":12,"column_end":31},"name":"process_file_in_src","qualname":"<CTLexerBuilder>::process_file_in_src","value":"pub fn process_file_in_src(Self, &str)\n-> Result<(Option<HashSet<String>>, Option<HashSet<String>>), Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Given the filename `a/b.l` as input, statically compile the file `src/a/b.l` into a Rust\n module which can then be imported using `lrlex_mod!(\"a/b.l\")`. This is a convenience\n function around [`process_file`](struct.CTLexerBuilder.html#method.process_file) which makes\n it easier to compile `.l` files stored in a project's `src/` directory: please see\n [`process_file`](#method.process_file) for additional constraints and information about the\n generated files.\n","sig":null,"attributes":[{"value":"/ Given the filename `a/b.l` as input, statically compile the file `src/a/b.l` into a Rust","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":19983,"byte_end":20075,"line_start":459,"line_end":459,"column_start":5,"column_end":97}},{"value":"/ module which can then be imported using `lrlex_mod!(\"a/b.l\")`. This is a convenience","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":20080,"byte_end":20168,"line_start":460,"line_end":460,"column_start":5,"column_end":93}},{"value":"/ function around [`process_file`](struct.CTLexerBuilder.html#method.process_file) which makes","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":20173,"byte_end":20269,"line_start":461,"line_end":461,"column_start":5,"column_end":101}},{"value":"/ it easier to compile `.l` files stored in a project's `src/` directory: please see","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":20274,"byte_end":20360,"line_start":462,"line_end":462,"column_start":5,"column_end":91}},{"value":"/ [`process_file`](#method.process_file) for additional constraints and information about the","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":20365,"byte_end":20460,"line_start":463,"line_end":463,"column_start":5,"column_end":100}},{"value":"/ generated files.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":20465,"byte_end":20485,"line_start":464,"line_end":464,"column_start":5,"column_end":25}},{"value":"deprecated(since = \"0.11.0\", note =\n             \"Please use lexer_in_src_dir() and build() instead\")","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":20490,"byte_end":20603,"line_start":465,"line_end":468,"column_start":5,"column_end":7}},{"value":"allow(deprecated)","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":20608,"byte_end":20628,"line_start":469,"line_end":469,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":22109,"byte_end":22121,"line_start":513,"line_end":513,"column_start":12,"column_end":24},"name":"process_file","qualname":"<CTLexerBuilder>::process_file","value":"pub fn process_file<P, Q>(Self, P, Q)\n-> Result<(Option<HashSet<String>>, Option<HashSet<String>>), Box<dyn Error>>\nwhere P: AsRef<Path>, Q: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Statically compile the `.l` file `inp` into Rust, placing the output into the file `outp`.\n The latter defines a module as follows:","sig":null,"attributes":[{"value":"/ Statically compile the `.l` file `inp` into Rust, placing the output into the file `outp`.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":21338,"byte_end":21432,"line_start":492,"line_end":492,"column_start":5,"column_end":99}},{"value":"/ The latter defines a module as follows:","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":21437,"byte_end":21480,"line_start":493,"line_end":493,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":21485,"byte_end":21488,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":21493,"byte_end":21504,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/    mod modname {","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":21509,"byte_end":21529,"line_start":496,"line_end":496,"column_start":5,"column_end":25}},{"value":"/      pub fn lexerdef() -> LexerDef<StorageT> { ... }","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":21534,"byte_end":21590,"line_start":497,"line_end":497,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":21595,"byte_end":21598,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/      ...","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":21603,"byte_end":21615,"line_start":499,"line_end":499,"column_start":5,"column_end":17}},{"value":"/    }","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":21620,"byte_end":21628,"line_start":500,"line_end":500,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":21633,"byte_end":21640,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":21645,"byte_end":21648,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ where:","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":21653,"byte_end":21663,"line_start":503,"line_end":503,"column_start":5,"column_end":15}},{"value":"/  * `modname` is either:","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":21668,"byte_end":21695,"line_start":504,"line_end":504,"column_start":5,"column_end":32}},{"value":"/    * the module name specified [`mod_name`](#method.mod_name)","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":21700,"byte_end":21765,"line_start":505,"line_end":505,"column_start":5,"column_end":70}},{"value":"/    * or, if no module name was explicitly specified, then for the file `/a/b/c.l` the","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":21770,"byte_end":21859,"line_start":506,"line_end":506,"column_start":5,"column_end":94}},{"value":"/      module name is `c_l` (i.e. the file's leaf name, minus its extension, with a prefix of","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":21864,"byte_end":21959,"line_start":507,"line_end":507,"column_start":5,"column_end":100}},{"value":"/      `_l`).","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":21964,"byte_end":21979,"line_start":508,"line_end":508,"column_start":5,"column_end":20}},{"value":"deprecated(since = \"0.11.0\", note =\n             \"Please use lexer_in_src_dir() and build() instead\")","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":21984,"byte_end":22097,"line_start":509,"line_end":512,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":22790,"byte_end":22818,"line_start":533,"line_end":533,"column_start":12,"column_end":40},"name":"allow_missing_terms_in_lexer","qualname":"<CTLexerBuilder>::allow_missing_terms_in_lexer","value":"pub fn allow_missing_terms_in_lexer(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If passed false, tokens used in the grammar but not defined in the lexer will cause a\n panic at lexer generation time. Defaults to false.\n","sig":null,"attributes":[{"value":"/ If passed false, tokens used in the grammar but not defined in the lexer will cause a","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":22630,"byte_end":22719,"line_start":531,"line_end":531,"column_start":5,"column_end":94}},{"value":"/ panic at lexer generation time. Defaults to false.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":22724,"byte_end":22778,"line_start":532,"line_end":532,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":23200,"byte_end":23230,"line_start":541,"line_end":541,"column_start":12,"column_end":42},"name":"allow_missing_tokens_in_parser","qualname":"<CTLexerBuilder>::allow_missing_tokens_in_parser","value":"pub fn allow_missing_tokens_in_parser(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If passed false, tokens defined in the lexer but not used in the grammar will cause a\n panic at lexer generation time. Defaults to true (since lexers sometimes define tokens such\n as reserved words, which are intentionally not in the grammar).\n","sig":null,"attributes":[{"value":"/ If passed false, tokens defined in the lexer but not used in the grammar will cause a","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":22927,"byte_end":23016,"line_start":538,"line_end":538,"column_start":5,"column_end":94}},{"value":"/ panic at lexer generation time. Defaults to true (since lexers sometimes define tokens such","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":23021,"byte_end":23116,"line_start":539,"line_end":539,"column_start":5,"column_end":100}},{"value":"/ as reserved words, which are intentionally not in the grammar).","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":23121,"byte_end":23188,"line_start":540,"line_end":540,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":183},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":23411,"byte_end":23418,"line_start":548,"line_end":548,"column_start":12,"column_end":19},"name":"CTLexer","qualname":"::ctbuilder::CTLexer","value":"CTLexer {  }","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185}],"decl_id":null,"docs":" An interface to the result of [CTLexerBuilder::build()].\n","sig":null,"attributes":[{"value":"/ An interface to the result of [CTLexerBuilder::build()].","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":23339,"byte_end":23399,"line_start":547,"line_end":547,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":189},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24697,"byte_end":24709,"line_start":587,"line_end":587,"column_start":8,"column_end":20},"name":"ct_token_map","qualname":"::ctbuilder::ct_token_map","value":"pub fn ct_token_map<StorageT: Display>(&str, &HashMap<String, StorageT>,\n                                       Option<&HashMap<&str, &str>>)\n-> Result<(), Box<dyn Error>>","parent":null,"children":[],"decl_id":null,"docs":" Create a Rust module named `mod_name` that can be imported with\n [`lrlex_mod!(mod_name)`](lrlex_mod). The module contains one `const` `StorageT` per token in\n `token_map`, with the token prefixed by `T_`. For example with `StorageT` `u8`, `mod_name` `x`,\n and `token_map` `HashMap{\"ID\": 0, \"INT\": 1}` the generated module will look roughly as\n follows:","sig":null,"attributes":[{"value":"/ Create a Rust module named `mod_name` that can be imported with","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":23764,"byte_end":23831,"line_start":563,"line_end":563,"column_start":1,"column_end":68}},{"value":"/ [`lrlex_mod!(mod_name)`](lrlex_mod). The module contains one `const` `StorageT` per token in","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":23832,"byte_end":23928,"line_start":564,"line_end":564,"column_start":1,"column_end":97}},{"value":"/ `token_map`, with the token prefixed by `T_`. For example with `StorageT` `u8`, `mod_name` `x`,","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":23929,"byte_end":24028,"line_start":565,"line_end":565,"column_start":1,"column_end":100}},{"value":"/ and `token_map` `HashMap{\"ID\": 0, \"INT\": 1}` the generated module will look roughly as","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24029,"byte_end":24119,"line_start":566,"line_end":566,"column_start":1,"column_end":91}},{"value":"/ follows:","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24120,"byte_end":24132,"line_start":567,"line_end":567,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24133,"byte_end":24136,"line_start":568,"line_end":568,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24137,"byte_end":24155,"line_start":569,"line_end":569,"column_start":1,"column_end":19}},{"value":"/ mod x {","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24156,"byte_end":24167,"line_start":570,"line_end":570,"column_start":1,"column_end":12}},{"value":"/   pub const T_ID: u8 = 0;","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24168,"byte_end":24197,"line_start":571,"line_end":571,"column_start":1,"column_end":30}},{"value":"/   pub const T_INT: u8 = 1;","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24198,"byte_end":24228,"line_start":572,"line_end":572,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24229,"byte_end":24234,"line_start":573,"line_end":573,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24235,"byte_end":24242,"line_start":574,"line_end":574,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24243,"byte_end":24246,"line_start":575,"line_end":575,"column_start":1,"column_end":4}},{"value":"/ You can optionally remap names (for example, because the parser's token names do not lead to","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24247,"byte_end":24343,"line_start":576,"line_end":576,"column_start":1,"column_end":97}},{"value":"/ valid Rust identifiers) by specifying the `rename_map` `HashMap`. For example, if `token_map`","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24344,"byte_end":24441,"line_start":577,"line_end":577,"column_start":1,"column_end":98}},{"value":"/ is `HashMap{\"+\": 0, \"ID\": 1}` and `rename_map` is `HashMap{\"+\": \"PLUS\"}` then the generated","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24442,"byte_end":24537,"line_start":578,"line_end":578,"column_start":1,"column_end":96}},{"value":"/ module will look roughly as follows:","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24538,"byte_end":24578,"line_start":579,"line_end":579,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24579,"byte_end":24582,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24583,"byte_end":24601,"line_start":581,"line_end":581,"column_start":1,"column_end":19}},{"value":"/ mod x {","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24602,"byte_end":24613,"line_start":582,"line_end":582,"column_start":1,"column_end":12}},{"value":"/   pub const T_PLUS: u8 = 0;","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24614,"byte_end":24645,"line_start":583,"line_end":583,"column_start":1,"column_end":32}},{"value":"/   pub const T_ID: u8 = 1;","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24646,"byte_end":24675,"line_start":584,"line_end":584,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24676,"byte_end":24681,"line_start":585,"line_end":585,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":24682,"byte_end":24689,"line_start":586,"line_end":586,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":192},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexemes.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lexemes","qualname":"::lexemes","value":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexemes.rs","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":511},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":216},{"krate":0,"index":223},{"krate":0,"index":226}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":511},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexemes.rs","byte_start":26596,"byte_end":26609,"line_start":7,"line_end":7,"column_start":12,"column_end":25},"name":"DefaultLexeme","qualname":"::lexemes::DefaultLexeme","value":"DefaultLexeme {  }","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516}],"decl_id":null,"docs":" lrlex's standard lexeme struct: all lexemes are instances of this struct.\n","sig":null,"attributes":[{"value":"/ lrlex's standard lexeme struct: all lexemes are instances of this struct.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexemes.rs","byte_start":26456,"byte_end":26533,"line_start":5,"line_end":5,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":292},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":28200,"byte_end":28204,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"Rule","qualname":"::lexer::Rule","value":"Rule { name }","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":295},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":28711,"byte_end":28715,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"name":"name","qualname":"::lexer::Rule::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":292},"children":[],"decl_id":null,"docs":" This rule's name. If None, then text which matches this rule will be skipped (i.e. will not\n create a lexeme).\n","sig":null,"attributes":[{"value":"/ This rule's name. If None, then text which matches this rule will be skipped (i.e. will not","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":28581,"byte_end":28676,"line_start":24,"line_end":24,"column_start":5,"column_end":100}},{"value":"/ create a lexeme).","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":28681,"byte_end":28702,"line_start":25,"line_end":25,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":28967,"byte_end":28970,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<Rule<StorageT>>::new","value":"pub fn new(Option<StorageT>, Option<String>, String)\n-> Result<Rule<StorageT>, regex::Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Rule`. This interface is unstable and should only be used by code generated\n by lrlex itself.\n","sig":null,"attributes":[{"value":"/ Create a new `Rule`. This interface is unstable and should only be used by code generated","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":28818,"byte_end":28911,"line_start":32,"line_end":32,"column_start":5,"column_end":98}},{"value":"/ by lrlex itself.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":28916,"byte_end":28936,"line_start":33,"line_end":33,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":301},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":29446,"byte_end":29454,"line_start":54,"line_end":54,"column_start":11,"column_end":19},"name":"LexerDef","qualname":"::lexer::LexerDef","value":"LexerDef<StorageT>","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":310}],"decl_id":null,"docs":" Methods which all lexer definitions must implement.\n","sig":null,"attributes":[{"value":"/ Methods which all lexer definitions must implement.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":29380,"byte_end":29435,"line_start":53,"line_end":53,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":29626,"byte_end":29636,"line_start":58,"line_end":58,"column_start":8,"column_end":18},"name":"from_rules","qualname":"::lexer::LexerDef::from_rules","value":"pub fn from_rules(Vec<Rule<StorageT>>) -> Self where Self: Sized","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Instantiate a lexer from a set of `Rule`s. This is only intended to be used by compiled\n lexers (see `ctbuilder.rs`).\n","sig":null,"attributes":[{"value":"/ Instantiate a lexer from a set of `Rule`s. This is only intended to be used by compiled","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":29490,"byte_end":29581,"line_start":56,"line_end":56,"column_start":5,"column_end":96}},{"value":"/ lexers (see `ctbuilder.rs`).","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":29586,"byte_end":29618,"line_start":57,"line_end":57,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":29787,"byte_end":29795,"line_start":63,"line_end":63,"column_start":8,"column_end":16},"name":"from_str","qualname":"::lexer::LexerDef::from_str","value":"pub fn from_str(&str) -> LexBuildResult<Self> where Self: Sized","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Instantiate a lexer from a string (e.g. representing a `.l` file).\n","sig":null,"attributes":[{"value":"/ Instantiate a lexer from a string (e.g. representing a `.l` file).","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":29709,"byte_end":29779,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":29907,"byte_end":29915,"line_start":68,"line_end":68,"column_start":8,"column_end":16},"name":"get_rule","qualname":"::lexer::LexerDef::get_rule","value":"pub fn get_rule(&Self, usize) -> Option<&Rule<StorageT>>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Get the `Rule` at index `idx`.\n","sig":null,"attributes":[{"value":"/ Get the `Rule` at index `idx`.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":29865,"byte_end":29899,"line_start":67,"line_end":67,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":30082,"byte_end":30096,"line_start":72,"line_end":72,"column_start":8,"column_end":22},"name":"get_rule_by_id","qualname":"::lexer::LexerDef::get_rule_by_id","value":"pub fn get_rule_by_id(&Self, StorageT) -> &Rule<StorageT>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Get the `Rule` instance associated with a particular lexeme ID. Panics if no such rule\n exists.\n","sig":null,"attributes":[{"value":"/ Get the `Rule` instance associated with a particular lexeme ID. Panics if no such rule","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":29968,"byte_end":30058,"line_start":70,"line_end":70,"column_start":5,"column_end":95}},{"value":"/ exists.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":30063,"byte_end":30074,"line_start":71,"line_end":71,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":30217,"byte_end":30233,"line_start":75,"line_end":75,"column_start":8,"column_end":24},"name":"get_rule_by_name","qualname":"::lexer::LexerDef::get_rule_by_name","value":"pub fn get_rule_by_name(&Self, &str) -> Option<&Rule<StorageT>>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Get the `Rule` instance associated with a particular name.\n","sig":null,"attributes":[{"value":"/ Get the `Rule` instance associated with a particular name.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":30147,"byte_end":30209,"line_start":74,"line_end":74,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":31435,"byte_end":31447,"line_start":92,"line_end":92,"column_start":8,"column_end":20},"name":"set_rule_ids","qualname":"::lexer::LexerDef::set_rule_ids","value":"pub fn set_rule_ids<'a>(&'a mut Self, &HashMap<&'a str, StorageT>)\n-> (Option<HashSet<&'a str>>, Option<HashSet<&'a str>>)","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Set the id attribute on rules to the corresponding value in `map`. This is typically used\n to synchronise a parser's notion of lexeme IDs with the lexers. While doing this, it keeps\n track of which lexemes:\n   1) are defined in the lexer but not referenced by the parser\n   2) and referenced by the parser but not defined in the lexer\n and returns them as a tuple `(Option<HashSet<&str>>, Option<HashSet<&str>>)` in the order\n (*defined_in_lexer_missing_from_parser*, *referenced_in_parser_missing_from_lexer*). Since\n in most cases both sets are expected to be empty, `None` is returned to avoid a `HashSet`\n allocation.","sig":null,"attributes":[{"value":"/ Set the id attribute on rules to the corresponding value in `map`. This is typically used","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":30283,"byte_end":30376,"line_start":77,"line_end":77,"column_start":5,"column_end":98}},{"value":"/ to synchronise a parser's notion of lexeme IDs with the lexers. While doing this, it keeps","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":30381,"byte_end":30475,"line_start":78,"line_end":78,"column_start":5,"column_end":99}},{"value":"/ track of which lexemes:","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":30480,"byte_end":30507,"line_start":79,"line_end":79,"column_start":5,"column_end":32}},{"value":"/   1) are defined in the lexer but not referenced by the parser","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":30512,"byte_end":30578,"line_start":80,"line_end":80,"column_start":5,"column_end":71}},{"value":"/   2) and referenced by the parser but not defined in the lexer","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":30583,"byte_end":30649,"line_start":81,"line_end":81,"column_start":5,"column_end":71}},{"value":"/ and returns them as a tuple `(Option<HashSet<&str>>, Option<HashSet<&str>>)` in the order","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":30654,"byte_end":30747,"line_start":82,"line_end":82,"column_start":5,"column_end":98}},{"value":"/ (*defined_in_lexer_missing_from_parser*, *referenced_in_parser_missing_from_lexer*). Since","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":30752,"byte_end":30846,"line_start":83,"line_end":83,"column_start":5,"column_end":99}},{"value":"/ in most cases both sets are expected to be empty, `None` is returned to avoid a `HashSet`","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":30851,"byte_end":30944,"line_start":84,"line_end":84,"column_start":5,"column_end":98}},{"value":"/ allocation.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":30949,"byte_end":30964,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":30969,"byte_end":30972,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Lexing and parsing can continue if either set is non-empty, so it is up to the caller as to","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":30977,"byte_end":31072,"line_start":87,"line_end":87,"column_start":5,"column_end":100}},{"value":"/ what action they take if either return set is non-empty. A non-empty set #1 is often","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":31077,"byte_end":31165,"line_start":88,"line_end":88,"column_start":5,"column_end":93}},{"value":"/ benign: some lexers deliberately define tokens which are not used (e.g. reserving future","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":31170,"byte_end":31262,"line_start":89,"line_end":89,"column_start":5,"column_end":97}},{"value":"/ keywords). A non-empty set #2 is more likely to be an error since there are parts of the","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":31267,"byte_end":31359,"line_start":90,"line_end":90,"column_start":5,"column_end":97}},{"value":"/ grammar where nothing the user can input will be parseable.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":31364,"byte_end":31427,"line_start":91,"line_end":91,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":31653,"byte_end":31663,"line_start":98,"line_end":98,"column_start":8,"column_end":18},"name":"iter_rules","qualname":"::lexer::LexerDef::iter_rules","value":"pub fn iter_rules(&Self) -> Iter<, Rule<StorageT>>","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Returns an iterator over all rules in this AST.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over all rules in this AST.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":31594,"byte_end":31645,"line_start":97,"line_end":97,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":311},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":31853,"byte_end":31875,"line_start":103,"line_end":103,"column_start":12,"column_end":34},"name":"LRNonStreamingLexerDef","qualname":"::lexer::LRNonStreamingLexerDef","value":"LRNonStreamingLexerDef {  }","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315}],"decl_id":null,"docs":" This struct represents, in essence, a .l file in memory. From it one can produce an\n [LRNonStreamingLexer] which actually lexes inputs.\n","sig":null,"attributes":[{"value":"/ This struct represents, in essence, a .l file in memory. From it one can produce an","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":31699,"byte_end":31786,"line_start":101,"line_end":101,"column_start":1,"column_end":88}},{"value":"/ [LRNonStreamingLexer] which actually lexes inputs.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":31787,"byte_end":31841,"line_start":102,"line_end":102,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":35561,"byte_end":35566,"line_start":210,"line_end":210,"column_start":12,"column_end":17},"name":"lexer","qualname":"<LRNonStreamingLexerDef<LexemeT, StorageT>>::lexer","value":"pub fn lexer<'lexer, 'input:'lexer>(&'lexer Self, &'input str)\n-> LRNonStreamingLexer","parent":null,"children":[],"decl_id":null,"docs":" Return an [LRNonStreamingLexer] for the `String` `s` that will lex relative to this\n [LRNonStreamingLexerDef].\n","sig":null,"attributes":[{"value":"/ Return an [LRNonStreamingLexer] for the `String` `s` that will lex relative to this","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":35428,"byte_end":35515,"line_start":208,"line_end":208,"column_start":5,"column_end":92}},{"value":"/ [LRNonStreamingLexerDef].","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":35520,"byte_end":35549,"line_start":209,"line_end":209,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":340},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":37774,"byte_end":37793,"line_start":265,"line_end":265,"column_start":12,"column_end":31},"name":"LRNonStreamingLexer","qualname":"::lexer::LRNonStreamingLexer","value":"LRNonStreamingLexer {  }","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348}],"decl_id":null,"docs":" An `LRNonStreamingLexer` holds a reference to a string and can lex it into [lrpar::Lexeme]s.\n Although the struct is tied to a single string, no guarantees are made about whether the\n lexemes are cached or not.\n","sig":null,"attributes":[{"value":"/ An `LRNonStreamingLexer` holds a reference to a string and can lex it into [lrpar::Lexeme]s.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":37542,"byte_end":37638,"line_start":262,"line_end":262,"column_start":1,"column_end":97}},{"value":"/ Although the struct is tied to a single string, no guarantees are made about whether the","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":37639,"byte_end":37731,"line_start":263,"line_end":263,"column_start":1,"column_end":93}},{"value":"/ lexemes are cached or not.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":37732,"byte_end":37762,"line_start":264,"line_end":264,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":38864,"byte_end":38867,"line_start":288,"line_end":288,"column_start":12,"column_end":15},"name":"new","qualname":"<LRNonStreamingLexer>::new","value":"pub fn new(&'input str, Vec<Result<LexemeT, LexError>>, Vec<usize>)\n-> LRNonStreamingLexer","parent":null,"children":[],"decl_id":null,"docs":" Create a new `LRNonStreamingLexer` that read in: the input `s`; and derived `lexemes` and\n `newlines`. The `newlines` `Vec<usize>` is a sorted list of the byte index of the start of\n the following line. i.e. for the input string `\" a\\nb\\n  c d\"` the `Vec` should contain\n `[3, 5]`.","sig":null,"attributes":[{"value":"/ Create a new `LRNonStreamingLexer` that read in: the input `s`; and derived `lexemes` and","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":38385,"byte_end":38478,"line_start":281,"line_end":281,"column_start":5,"column_end":98}},{"value":"/ `newlines`. The `newlines` `Vec<usize>` is a sorted list of the byte index of the start of","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":38483,"byte_end":38577,"line_start":282,"line_end":282,"column_start":5,"column_end":99}},{"value":"/ the following line. i.e. for the input string `\" a\\nb\\n  c d\"` the `Vec` should contain","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":38582,"byte_end":38673,"line_start":283,"line_end":283,"column_start":5,"column_end":96}},{"value":"/ `[3, 5]`.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":38678,"byte_end":38691,"line_start":284,"line_end":284,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":38696,"byte_end":38699,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Note that if one or more lexemes or newlines was not created from `s`, subsequent calls to","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":38704,"byte_end":38798,"line_start":286,"line_end":286,"column_start":5,"column_end":99}},{"value":"/ the `LRNonStreamingLexer` may cause `panic`s.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":38803,"byte_end":38852,"line_start":287,"line_end":287,"column_start":5,"column_end":54}}]},{"kind":"Type","id":{"krate":0,"index":452},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1174,"byte_end":1188,"line_start":32,"line_end":32,"column_start":10,"column_end":24},"name":"LexBuildResult","qualname":"::LexBuildResult","value":"Result<T, LexBuildError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":540},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1319,"byte_end":1332,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"LexBuildError","qualname":"::LexBuildError","value":"LexBuildError { kind }","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543}],"decl_id":null,"docs":" Any error from the Lex parser returns an instance of this struct.\n","sig":null,"attributes":[{"value":"/ Any error from the Lex parser returns an instance of this struct.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1221,"byte_end":1290,"line_start":34,"line_end":34,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":541},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1343,"byte_end":1347,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"name":"kind","qualname":"::LexBuildError::kind","value":"LexErrorKind","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":547},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1531,"byte_end":1543,"line_start":47,"line_end":47,"column_start":5,"column_end":17},"name":"PrematureEnd","qualname":"::LexErrorKind::PrematureEnd","value":"LexErrorKind::PrematureEnd","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":549},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1549,"byte_end":1569,"line_start":48,"line_end":48,"column_start":5,"column_end":25},"name":"RoutinesNotSupported","qualname":"::LexErrorKind::RoutinesNotSupported","value":"LexErrorKind::RoutinesNotSupported","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":551},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1575,"byte_end":1593,"line_start":49,"line_end":49,"column_start":5,"column_end":23},"name":"UnknownDeclaration","qualname":"::LexErrorKind::UnknownDeclaration","value":"LexErrorKind::UnknownDeclaration","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":553},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1599,"byte_end":1611,"line_start":50,"line_end":50,"column_start":5,"column_end":17},"name":"MissingSpace","qualname":"::LexErrorKind::MissingSpace","value":"LexErrorKind::MissingSpace","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":555},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1617,"byte_end":1628,"line_start":51,"line_end":51,"column_start":5,"column_end":16},"name":"InvalidName","qualname":"::LexErrorKind::InvalidName","value":"LexErrorKind::InvalidName","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":557},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1634,"byte_end":1647,"line_start":52,"line_end":52,"column_start":5,"column_end":18},"name":"DuplicateName","qualname":"::LexErrorKind::DuplicateName","value":"LexErrorKind::DuplicateName","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":559},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1653,"byte_end":1663,"line_start":53,"line_end":53,"column_start":5,"column_end":15},"name":"RegexError","qualname":"::LexErrorKind::RegexError","value":"LexErrorKind::RegexError","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":546},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1512,"byte_end":1524,"line_start":46,"line_end":46,"column_start":10,"column_end":22},"name":"LexErrorKind","qualname":"::LexErrorKind","value":"pub enum LexErrorKind {\n    PrematureEnd,\n    RoutinesNotSupported,\n    UnknownDeclaration,\n    MissingSpace,\n    InvalidName,\n    DuplicateName,\n    RegexError,\n}","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":559}],"decl_id":null,"docs":" The various different possible Lex parser errors.\n","sig":null,"attributes":[{"value":"/ The various different possible Lex parser errors.","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1432,"byte_end":1485,"line_start":44,"line_end":44,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":457},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":2510,"byte_end":2519,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"build_lex","qualname":"::build_lex","value":"pub fn build_lex<LexemeT: lrpar::Lexeme<StorageT>, StorageT: Copy + Eq +\n                 Hash + PrimInt + TryFrom<usize> + Unsigned>(&str)\n-> Result<LRNonStreamingLexerDef<LexemeT, StorageT>, LexBuildError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.8.0\", note =\n             \"Please use LRNonStreamingLexerDef::from_str\")","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":2418,"byte_end":2502,"line_start":72,"line_end":72,"column_start":1,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":460},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":2875,"byte_end":2895,"line_start":86,"line_end":86,"column_start":10,"column_end":30},"name":"NonStreamingLexerDef","qualname":"::NonStreamingLexerDef","value":"LRNonStreamingLexerDef<LexemeT, StorageT>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.8.0\", note =\n             \"This struct has been renamed to LRNonStreamingLexerDef\")","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":2760,"byte_end":2865,"line_start":82,"line_end":85,"column_start":1,"column_end":3}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":4729,"byte_end":4739,"line_start":55,"line_end":55,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":5979,"byte_end":5993,"line_start":87,"line_end":87,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":6198,"byte_end":6212,"line_start":94,"line_end":94,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":23528,"byte_end":23535,"line_start":553,"line_end":553,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexemes.rs","byte_start":26789,"byte_end":26802,"line_start":14,"line_end":14,"column_start":73,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexemes.rs","byte_start":27497,"byte_end":27510,"line_start":47,"line_end":47,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexemes.rs","byte_start":27812,"byte_end":27825,"line_start":60,"line_end":60,"column_start":9,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":28797,"byte_end":28801,"line_start":31,"line_end":31,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":32074,"byte_end":32096,"line_start":109,"line_end":109,"column_start":9,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":35380,"byte_end":35402,"line_start":206,"line_end":206,"column_start":7,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":38324,"byte_end":38343,"line_start":279,"line_end":279,"column_start":7,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":39365,"byte_end":39384,"line_start":307,"line_end":307,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":39776,"byte_end":39795,"line_start":320,"line_end":320,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/parser.rs","byte_start":51960,"byte_end":51969,"line_start":11,"line_end":11,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1414,"byte_end":1427,"line_start":42,"line_end":42,"column_start":16,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1690,"byte_end":1703,"line_start":56,"line_end":56,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":869,"byte_end":876,"line_start":20,"line_end":20,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":192}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":4729,"byte_end":4739,"line_start":55,"line_end":55,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":5979,"byte_end":5993,"line_start":87,"line_end":87,"column_start":10,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":6198,"byte_end":6212,"line_start":94,"line_end":94,"column_start":29,"column_end":43},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/ctbuilder.rs","byte_start":23528,"byte_end":23535,"line_start":553,"line_end":553,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexemes.rs","byte_start":26789,"byte_end":26802,"line_start":14,"line_end":14,"column_start":73,"column_end":86},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":511},"to":{"krate":22,"index":458}},{"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexemes.rs","byte_start":27497,"byte_end":27510,"line_start":47,"line_end":47,"column_start":9,"column_end":22},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":511},"to":{"krate":2,"index":9403}},{"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexemes.rs","byte_start":27812,"byte_end":27825,"line_start":60,"line_end":60,"column_start":9,"column_end":22},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":511},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":28797,"byte_end":28801,"line_start":31,"line_end":31,"column_start":16,"column_end":20},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":32074,"byte_end":32096,"line_start":109,"line_end":109,"column_start":9,"column_end":31},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":311},"to":{"krate":0,"index":301}},{"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":35380,"byte_end":35402,"line_start":206,"line_end":206,"column_start":7,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":38324,"byte_end":38343,"line_start":279,"line_end":279,"column_start":7,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":39365,"byte_end":39384,"line_start":307,"line_end":307,"column_start":36,"column_end":55},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":340},"to":{"krate":22,"index":446}},{"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/lexer.rs","byte_start":39776,"byte_end":39795,"line_start":320,"line_end":320,"column_start":9,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":340},"to":{"krate":22,"index":451}},{"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/parser.rs","byte_start":51960,"byte_end":51969,"line_start":11,"line_end":11,"column_start":32,"column_end":41},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1414,"byte_end":1427,"line_start":42,"line_end":42,"column_start":16,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":540},"to":{"krate":1,"index":2338}},{"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/lrlex-0.11.1/src/lib/mod.rs","byte_start":1690,"byte_end":1703,"line_start":56,"line_end":56,"column_start":23,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":540},"to":{"krate":2,"index":9403}}]}
{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2","program":"/Users/diegogarciarodriguezdelcampo/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","getset","--edition=2018","/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","proc-macro","--emit=dep-info,link","-C","prefer-dynamic","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=d20b91fc0c89cf55","-C","extra-filename=-d20b91fc0c89cf55","--out-dir","/Users/diegogarciarodriguezdelcampo/Desktop/8vo/Compis/LittleDuck2020/GRMTOOLS/littleduck/target/rls/debug/deps","-L","dependency=/Users/diegogarciarodriguezdelcampo/Desktop/8vo/Compis/LittleDuck2020/GRMTOOLS/littleduck/target/rls/debug/deps","--extern","proc_macro_error=/Users/diegogarciarodriguezdelcampo/Desktop/8vo/Compis/LittleDuck2020/GRMTOOLS/littleduck/target/rls/debug/deps/libproc_macro_error-70ef74f09df89d6f.rlib","--extern","proc_macro2=/Users/diegogarciarodriguezdelcampo/Desktop/8vo/Compis/LittleDuck2020/GRMTOOLS/littleduck/target/rls/debug/deps/libproc_macro2-b08e2eecf1d81b37.rlib","--extern","quote=/Users/diegogarciarodriguezdelcampo/Desktop/8vo/Compis/LittleDuck2020/GRMTOOLS/littleduck/target/rls/debug/deps/libquote-fa5bef5093030c49.rlib","--extern","syn=/Users/diegogarciarodriguezdelcampo/Desktop/8vo/Compis/LittleDuck2020/GRMTOOLS/littleduck/target/rls/debug/deps/libsyn-e3fcf34b4059327f.rlib","--extern","proc_macro","--cap-lints","allow","--error-format=json","--sysroot","/Users/diegogarciarodriguezdelcampo/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/diegogarciarodriguezdelcampo/Desktop/8vo/Compis/LittleDuck2020/GRMTOOLS/littleduck/target/rls/debug/deps/libgetset-d20b91fc0c89cf55.dylib"},"prelude":{"crate_id":{"name":"getset","disambiguator":[14231360500316095586,0]},"crate_root":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src","external_crates":[{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5737620048972976797,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2242199718071837415,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2188212999151601010,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1020664553731942337,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5221923779696816614,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10454403582981253701,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7392107620293427149,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9383090470819858406,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[13561338507145107503,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2153887466384468734,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11638676648589799525,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[17336646944492823354,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[16179365956064936006,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[2085897901681677768,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4724748409658749452,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[13513626471981952824,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14681960900203760207,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":18,"id":{"name":"proc_macro","disambiguator":[7507616141749514563,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":19,"id":{"name":"syn","disambiguator":[15664055512205658554,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":20,"id":{"name":"proc_macro2","disambiguator":[2419188505037198488,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":21,"id":{"name":"unicode_xid","disambiguator":[16817374563039733649,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":22,"id":{"name":"quote","disambiguator":[6578032121755235588,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":23,"id":{"name":"proc_macro_error","disambiguator":[14664107608207547278,0]}},{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","num":24,"id":{"name":"proc_macro_error_attr","disambiguator":[12806177047419786637,0]}}],"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","byte_start":0,"byte_end":9672,"line_start":1,"line_end":341,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","byte_start":0,"byte_end":9672,"line_start":1,"line_end":341,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":130},{"krate":0,"index":228}],"decl_id":null,"docs":"Getset, we're ready to go!","sig":null,"attributes":[{"value":"*\nGetset, we're ready to go!\n\nA procedural macro for generating the most basic getters and setters on fields.\n\nGetters are generated as `fn field(&self) -> &type`, while setters are generated as `fn field(&mut self, val: type)`.\n\nThese macros are not intended to be used on fields which require custom logic inside of their setters and getters. Just write your own in that case!\n\n```rust\nuse getset::{CopyGetters, Getters, MutGetters, Setters};\n\n#[derive(Getters, Setters, MutGetters, CopyGetters, Default)]\npub struct Foo<T>\nwhere\n    T: Copy + Clone + Default,\n{\n    /// Doc comments are supported!\n    /// Multiline, even.\n    #[getset(get, set, get_mut)]\n    private: T,\n\n    /// Doc comments are supported!\n    /// Multiline, even.\n    #[getset(get_copy = \"pub\", set = \"pub\", get_mut = \"pub\")]\n    public: T,\n}\n\nlet mut foo = Foo::default();\nfoo.set_private(1);\n(*foo.private_mut()) += 1;\nassert_eq!(*foo.private(), 2);\n```\n\nYou can use `cargo-expand` to generate the output. Here are the functions that the above generates (Replicate with `cargo expand --example simple`):\n\n```rust,ignore\nuse getset::{Getters, MutGetters, CopyGetters, Setters};\npub struct Foo<T>\nwhere\n    T: Copy + Clone + Default,\n{\n    /// Doc comments are supported!\n    /// Multiline, even.\n    #[getset(get, get, get_mut)]\n    private: T,\n    /// Doc comments are supported!\n    /// Multiline, even.\n    #[getset(get_copy = \"pub\", set = \"pub\", get_mut = \"pub\")]\n    public: T,\n}\nimpl<T> Foo<T>\nwhere\n    T: Copy + Clone + Default,\n{\n    /// Doc comments are supported!\n    /// Multiline, even.\n    #[inline(always)]\n    fn private(&self) -> &T {\n        &self.private\n    }\n}\nimpl<T> Foo<T>\nwhere\n    T: Copy + Clone + Default,\n{\n    /// Doc comments are supported!\n    /// Multiline, even.\n    #[inline(always)]\n    pub fn set_public(&mut self, val: T) -> &mut Self {\n        self.public = val;\n        self\n    }\n}\nimpl<T> Foo<T>\nwhere\n    T: Copy + Clone + Default,\n{\n    /// Doc comments are supported!\n    /// Multiline, even.\n    #[inline(always)]\n    fn private_mut(&mut self) -> &mut T {\n        &mut self.private\n    }\n    /// Doc comments are supported!\n    /// Multiline, even.\n    #[inline(always)]\n    pub fn public_mut(&mut self) -> &mut T {\n        &mut self.public\n    }\n}\nimpl<T> Foo<T>\nwhere\n    T: Copy + Clone + Default,\n{\n    /// Doc comments are supported!\n    /// Multiline, even.\n    #[inline(always)]\n    pub fn public(&self) -> T {\n        self.public\n    }\n}\n```\n\nAttributes can be set on struct level for all fields in struct as well. Field level attributes take\nprecedence.\n\n```rust\nmod submodule {\n    use getset::{Getters, MutGetters, CopyGetters, Setters};\n    #[derive(Getters, CopyGetters, Default)]\n    #[getset(get_copy = \"pub\")] // By default add a pub getting for all fields.\n    pub struct Foo {\n        public: i32,\n        #[getset(get_copy)] // Override as private\n        private: i32,\n    }\n    fn demo() {\n        let mut foo = Foo::default();\n        foo.private();\n    }\n}\n\nlet mut foo = submodule::Foo::default();\nfoo.public();\n```\n\nFor some purposes, it's useful to have the `get_` prefix on the getters for\neither legacy of compatibility reasons. It is done with `with_prefix`.\n\n```rust\nuse getset::{Getters, MutGetters, CopyGetters, Setters};\n\n#[derive(Getters, Default)]\npub struct Foo {\n    #[getset(get = \"pub with_prefix\")]\n    field: bool,\n}\n\n\nlet mut foo = Foo::default();\nlet val = foo.get_field();\n```\n\nSkipping setters and getters generation for a field when struct level attribute is used\nis possible with `#[getset(skip)]`.\n\n```rust\nuse getset::{CopyGetters, Setters};\n\n#[derive(CopyGetters, Setters)]\n#[getset(get_copy, set)]\npub struct Foo {\n    // If the field was not skipped, the compiler would complain about moving\n    // a non-copyable type in copy getter.\n    #[getset(skip)]\n    skipped: String,\n\n    field1: usize,\n    field2: usize,\n}\n\nimpl Foo {\n    // It is possible to write getters and setters manually,\n    // possibly with a custom logic.\n    fn skipped(&self) -> &str {\n        &self.skipped\n    }\n\n    fn set_skipped(&mut self, val: &str) -> &mut Self {\n        self.skipped = val.to_string();\n        self\n    }\n}\n```\n*/","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","byte_start":0,"byte_end":4185,"line_start":1,"line_end":176,"column_start":1,"column_end":3}}]},{"kind":"Function","id":{"krate":0,"index":170},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","byte_start":4656,"byte_end":4663,"line_start":194,"line_end":194,"column_start":8,"column_end":15},"name":"getters","qualname":"::getters","value":"pub fn getters(TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"proc_macro_derive(Getters, attributes(get, with_prefix, getset))","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","byte_start":4561,"byte_end":4628,"line_start":192,"line_end":192,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":172},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","byte_start":5179,"byte_end":5191,"line_start":211,"line_end":211,"column_start":8,"column_end":20},"name":"copy_getters","qualname":"::copy_getters","value":"pub fn copy_getters(TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"proc_macro_derive(CopyGetters, attributes(get_copy, with_prefix, getset))","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","byte_start":5075,"byte_end":5151,"line_start":209,"line_end":209,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":174},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","byte_start":5700,"byte_end":5711,"line_start":228,"line_end":228,"column_start":8,"column_end":19},"name":"mut_getters","qualname":"::mut_getters","value":"pub fn mut_getters(TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"proc_macro_derive(MutGetters, attributes(get_mut, getset))","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","byte_start":5611,"byte_end":5672,"line_start":226,"line_end":226,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":176},"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","byte_start":6210,"byte_end":6217,"line_start":244,"line_end":244,"column_start":8,"column_end":15},"name":"setters","qualname":"::setters","value":"pub fn setters(TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"proc_macro_derive(Setters, attributes(set, getset))","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/lib.rs","byte_start":6128,"byte_end":6182,"line_start":242,"line_end":242,"column_start":1,"column_end":55}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/generate.rs","byte_start":10128,"byte_end":10135,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/diegogarciarodriguezdelcampo/.cargo/registry/src/github.com-1ecc6299db9ec823/getset-0.1.2/src/generate.rs","byte_start":10128,"byte_end":10135,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":132},"to":{"krate":4294967295,"index":4294967295}}]}